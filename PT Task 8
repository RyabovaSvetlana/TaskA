Задание 1

import numpy as np

zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110]
ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832]

covariance = np.cov(zp, ks, ddof=0)[0][1]

print(covariance)

Результат: 9157.84 (совпадает с результатом, полученным при вычислении с помощью элементарных действий).



Задание 2

Для нахождения дов. интервала для мат.ожидания с надежностью 0,95  выполним следующие шаги:

Среднее значение выборки:
   x̄ = (131 + 125 + 115 + 122 + 131 + 115 + 107 + 99 + 125 + 111) / 10 = 116.5

Стандартное отклонение выборки:
   s = √[((131 - 116.5)² + (125 - 116.5)² + ... + (111 - 116.5)²) / 9] = 11.38

 Критическое значение t-статистики с уровнем значимости 0.05 и степенями свободы 9 (N-1):
   t = 2.262

Вычислить дов. интервал:
   дов. интервал = x̄ ± (t * s / √n)
   дов.интервал = 116.5 ± (2.262 * 11.38 / √10)
   дов.интервал = (105.58, 127.42)

Ответ: дов.интервал для мат. ожид. с надежностью 0.95 равен (105.58, 127.42).

В Python:

iq = np.array([131, 125, 115, 122, 131, 115, 107, 99, 125, 111])
alpha = 0.05

n = iq.size
std = iq.std(ddof=1)
mean = iq.mean()
print(f'>>> Размер выборки: n = {n}\n'f'>>> Среднее квадратическое отклонение по выборке(несмещенное): {std:.2f}\n'f'>>> Среднее выборочное: {mean:.2f}')

t = stats.t.ppf(1 - alpha / 2, n - 1)
d = t * std / (n) ** 0.5
d,t


min = mean - d
max = mean + d
print(f'>>> Доверительный интервал для математического ожидания с надежностью 0.95 составляет:{min: .2f};{max: .2f}')




Задание 3

var = 25
n = 27
mean = 174.2
std = (var)**0.5
alpha = 0.05

z=stats.norm.ppf(1-alpha/2,n-1)

d=z*std/(n)**0.5

min = mean - d
max = mean + d

print(f'>>> Доверительный интервал для математического ожидания с надежностью 0.95 составляет:{min: .2f};{max: .2f}')

